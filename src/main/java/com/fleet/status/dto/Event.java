package com.fleet.status.dto;

import jakarta.persistence.*;
import lombok.Data;
import lombok.ToString;

import java.time.Duration;
import java.time.Instant;
import java.util.List;

@Data
@Entity
@Table(name = "TEvents")
public class Event {
    @Id
    @GeneratedValue(strategy= GenerationType.IDENTITY)
    @Column(name = "intEventId")
    private Long eventId;

    @Column(name = "dtmNextUpdate")
    private String nextUpdate;
    @Column(name = "strRemark")
    private String remark;
    @Column(name = "blnBackInService")
    private Integer backInService;
    @Column(name = "dtmStartTime")
    private Instant startTime;
    @Column(name = "dtmEndTime")
    private Instant endTime;

    @ManyToOne
    @JoinColumn(name = "intAircraftId", referencedColumnName = "intAircraftId")
    private Aircraft aircraft;

    @ManyToMany
    @ToString.Exclude //avoid stackoverflow error when use toString method generated by @Data, they print each other between many to many
    @JoinTable(
            name = "TEventReasons",
            joinColumns = @JoinColumn(name = "intEventId"),
            inverseJoinColumns = @JoinColumn(name = "intReasonId")
    )
    private List<Reason> reason;

    @Transient
    private String reasonString;

    public String getDownTime(){
        if (getEndTime() == null || getStartTime() == null) {
            return "Down time is not available";
        }
        Duration downtime = Duration.between(startTime, endTime);
        return "Down Time: " + downtime.toDaysPart() + "d " + downtime.toHoursPart() + "h " + downtime.toMinutesPart() + "m";
    }
}
